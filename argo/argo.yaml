global:
  domain: ${domain}
#  logging:
#    format: text
#    level: info

configs:
  url: https://${domain}
  rbac:
    create: true
    policy.default: "g, *, role:readonly"
    policy.csv: |
      p, admin, *, *, *, allow
      p, readonly, get, applications, *, allow
      p, readonly, get, apps, *, allow
      p, readonly, get, projects, *, allow
      p, readonly, get, clusters, *, allow
      p, readonly, get, repositories, *, allow
      g, system:serviceaccount:argocd:argocd-server, role:admin
      g, system:serviceaccount:argocd:argocd-application-controller, role:admin
      g, admin, role:admin
      g, readonly, role:readonly
    scopes: '[cognito:groups]'
  cm:
    create: true
    admin.enabled: true
    oidc.config: |
      name: cognito
      issuer: https://${cognito_endpoint}
      clientID: ${client_id}
      clientSecret: ${client_secret}
      requestedScopes:
        - openid
        - profile
        - email
      redirectUri: https://${domain}/api/dex/callback"
      requestedIDTokenClaims:
        groups:
          essential: true
      claimMappings:
        groups: "cognito:groups"
    extraConfig:
      accounts.admin: api
server:
  repoServer:
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
  applicationSet:
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
  notifications:
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
  controller:
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
  replicas: 1
  serviceAccount:
    enabled: true
  config:
    url: https://${domain}



  resources:
    requests:
      cpu: 100m
      memory: 100Mi
  ingress:
    hosts:
      - ${domain}
    enabled: true
    annotations:
        kubernetes.io/ingress.class: "alb"
        alb.ingress.kubernetes.io/scheme: internet-facing
        alb.ingress.kubernetes.io/backend-protocol: HTTPS
        alb.ingress.kubernetes.io/target-type: ip
        alb.ingress.kubernetes.io/subnets: '${subnets}'
        alb.ingress.kubernetes.io/listen-ports : '[{"HTTP": 80}, {"HTTPS":443}]'
        alb.ingress.kubernetes.io/certificate-arn: '${cert}'
        alb.ingress.kubernetes.io/ssl-redirect: '443'





