global:
  enabled: true
  tlsDisable: true
injector:
  enabled: true
  affinity: ""
server:
  serviceAccount:
    name: ${sa}
    create: false
  affinity: ""
  ingress:
    hosts:
      - host: vault.${domain_name}
        paths: [ ]
    enabled: true
    annotations:
      kubernetes.io/ingress.class: "alb"
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/backend-protocol: HTTP
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/subnets: '${public_subnets_string}'
      alb.ingress.kubernetes.io/healthcheck-path: /v1/sys/health?standbyok=true&sealedcode=204&uninitcode=204
      alb.ingress.kubernetes.io/success-codes: '204,200'
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
      alb.ingress.kubernetes.io/certificate-arn: '${alb_cert_arn}'
  readinessProbe:
    enabled: true
    path: "/v1/sys/health?standbyok=true&sealedcode=204&uninitcode=204"
  ha:
    enabled: true
    replicas: 3
    raft:
      enabled: true
      setNodeId: true
      config: |
        ui = true
        listener "tcp" {
          tls_disable = true
          address = "[::]:8200"
          cluster_address = "[::]:8201"
        }
        storage "raft" {
          path = "/vault/data"
        }
        seal "awskms" {
          region     = "${region}"
          kms_key_id = "${key}"
          endpoint = "kms.${region}.amazonaws.com"
        }
        service_registration "kubernetes" {}
    config: |
      ui = true
      listener "tcp" {
        tls_disable = true
        address = "[::]:8200"
        cluster_address = "[::]:8201"
      }
      disable_mlock = true
      service_registration "kubernetes" {}
ui:
  enabled: true
  serviceType: "ClusterIP"
  externalPort: 8200

